{
  "swagger": "2.0",
  "info": {
    "description": "This is a demo server for Brian's personal BodyFat project server.",
    "version": "1.0.0",
    "title": "BodyFat demo swagger api doc ",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "brianwang2013@hotmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "localhost:4000",
  "basePath": "/api",
  "schemes": [
    "http"
  ],
  "paths": {
    "/food": {
      "post": {
        "tags": [
          "Food"
        ],
        "summary": "Add a new food to the food list",
        "description": "Enter food name, calorie and etc.",
        "operationId": "addFood",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Food object that needs to be added to the food list",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Food"
            }
          }
        ],
        "responses": {
          "422": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "tags": [
          "Food"
        ],
        "summary": "Get all existing food",
        "description": "",
        "operationId": "getAllFood",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Food"
              }
            }
          },
          "400": {
            "description": "bad gateway"
          },
          "404": {
            "description": "food not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Food"
        ],
        "summary": "get Food by Name",
        "description": "Returns a single food",
        "operationId": "deleteFoodByName",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Name of food to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Food"
            }
          },
          "404": {
            "description": "Food not exist"
          }
        }
      }
    },
    "/food/{name}": {
      "get": {
        "tags": [
          "Food"
        ],
        "summary": "get Food by Name",
        "description": "Returns a single food",
        "operationId": "getFoodByName",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Name of food to return",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Food"
            }
          },
          "404": {
            "description": "Food not found"
          }
        }
      }
    }

  },
  "definitions": {
    "Food": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string",
          "example": "rice"
        },
        "calorie": {
          "type": "number",
          "example": 100
        },
        "protein": {
          "type": "number"
        },
        "fat": {
          "type": "number"
        },
        "carbs": {
          "type": "number",
          "example": 100
        }
      },
      "xml": {
        "name": "Food"
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}